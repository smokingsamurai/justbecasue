# This is a basic workflow to help you get started with Actions

name: testshell

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
    description: 'Receives file and generates output'
    inputs:
      file-path:  # id of input
        description: "Path to test script"
        required: true
        default: 'test-file.js'
    outputs:
      results-file: # id of output
        description: "Path to results file"
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    outputs:
      renew: ${{ steps.checkapply.outputs.test }}
      renews: ${{ steps.checkapply.outputs.sp_secret }}
      renewed: ${{ steps.checkapply.outputs.hosts }}
  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Check
        id: checkapply
        shell: pwsh
        run: |
          $a = "12345"
          Write-Output "::set-output name=sp_secret::$a"
          Write-Output "::set-output name=test::$($a)"
          echo "::set-output name=hosts::${$a}"
  orlando:
    name: test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check
        id: o
        run: |
          echo ${{ needs.build.outputs.sp_secret }}
          echo ${{ needs.build.outputs.test }}
          echo ${{ needs.build.outputs.renew }}
          echo ${{ needs.build.outputs.renews }}
          echo ${{ needs.build.outputs.renewed }}